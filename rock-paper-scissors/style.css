@import url('https://fonts.googleapis.com/css2?family=Grandstander:wght@700&family=Outfit&display=swap');

:root {
	/*! Calculation for --font-size used to size *********************/
	/*! text, icons, borders, padding, and margins via calc() ********/
	/*** Calculation courtesy of Michael Riethmuller *****************/
	/*** https://websemantics.uk/tools/responsive-font-calculator/ ***/
	--font-size: calc(0.875rem + ((1vw - 0.01rem) * 0.5));

	--font-serious: 'Outfit', Verdana, sans-serif;

	/*** this is a kid's game, font should be fun! ***/
	--font-fun: 'Grandstander', Arial, sans-serif;

	--size-icon-reg: calc(var(--font-size) * 2);
	--size-icon-score: calc(var(--font-size) * 1.6);

	--shadow-on: 2px 2px 12px -6px var(--color-one);
	--shadow-off: 0px 0px 0px 0px var(--color-one);

	--transition-short: 300ms;
	--transition-long: calc(var(--transition-short) * 2);
	--transition-xlong: calc(var(--transition-short) * 3);
}

@media screen and (min-width: 76rem) {
	:root {
		--font-size: 1.25rem;
	}
}

/*** "light--hidden" elements will be hidden **/
/*** when the site is set to Light Mode *******/
:root[color-mode='light'] .light--hidden {
	display: none;
}

/*** "dark--hidden" elements will be hidden ***/
/*** when the site is set to Dark Mode ********/
:root[color-mode='dark'] .dark--hidden {
	display: none;
}

html[color-mode='light'] {
	--color-one: hsl(283, 20%, 10%);
	--color-two: hsl(103, 75%, 50%);
	--color-three: hsl(283, 20%, 90%);
	--color-four: #a920df;
}

html[color-mode='dark'] {
	--color-one: hsl(103, 20%, 90%);
	--color-two: hsl(283, 60%, 50%);
	--color-three: hsl(103, 20%, 10%);
	--color-four: hsl(103, 60%, 50%);
}

/*** Rather than abruptly switch between Light ***/
/*** and Dark modes, soften with transiton *******/
html,
html *,
html *:hover,
html *::before,
html *::after {
	transition: all var(--transition-xlong) ease-in-out;
}

html.transition,
html.transition *,
html.transition *:hover,
html.transition *::before,
html.transition *::after {
	transition: all var(--transition-xlong) ease-in-out;
}

*,
*::before,
*::after {
	box-sizing: border-box;
	border-radius: calc(var(--font-size) * 0.5);
	margin: 0;

	color: var(--color-three);
	font-family: var(--font-fun);
	font-size: var(--font-size);
	font-weight: 700;
	/* border: 1px dotted dodgerblue; */
}

html {
	scroll-behavior: smooth;
}

body {
	display: flex;
	flex-direction: column;
	align-items: center;

	background-color: var(--color-three);
}

/*** Contents between header and footer ***/
main {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;

	width: 100%;
}

@media screen and (max-width: 550px) {
	main {
		/*** on phone, move player's buttons ***/
		/*** to bottom of screen ***************/
		flex-direction: column-reverse;
	}
}

header {
	display: flex;
	justify-content: space-between;
	align-items: center;

	width: 100%;
	margin: 0 0 calc(var(--font-size) * 0.5);
}

h1 {
	padding: calc(var(--font-size) * 0.75) 0 0;
	text-align: center;

	font-size: calc(var(--font-size) * 2.2);
}

h2 {
	margin: 0 0 calc(var(--font-size) * 1.25);

	font-size: calc(var(--font-size) * 1.75);
}

h3 {
	padding: calc(var(--font-size) * 0.25) calc(var(--font-size) * 0.5) 0;

	border: none;
	color: var(--color-one);

	font-size: calc(var(--font-size) * 1.25);

	transition: all var(--transition-long) ease-in-out;
}

@media screen and (max-width: 550px) {
	h1 {
		font-size: calc(var(--font-size) * 1.75);
	}
	h3 {
		font-size: calc(var(--font-size) * 1.6);
	}
}

/*** Hide the Computer's Rock, Paper, Scissors options ***/
/*** by setting font color to background color ***********/
h3.computer {
	/* transition: none; */

	color: var(--color-three);

	transition: all var(--transition-long) ease-in-out;
}

button {
	cursor: pointer;

	padding: 0px;
	margin: 0px;

	border: none;
}

fieldset {
	border: none;
}

legend {
	margin: 0;
	padding: 0;
}

footer,
footer * {
	font-family: var(--font-serious);
	font-size: calc(var(--font-size) * 0.6);
	font-weight: normal;
}

footer {
	padding: calc(var(--font-size) * 0.5);
	height: calc(var(--font-size) * 12);
	width: calc(var(--font-size) * 15);

	color: var(--color-four);
	text-align: center;
}

details {
	margin: calc(var(--font-size) * 0.75) 0 0;

	color: var(--color-three);
	background-color: var(--color-four);
}

details > summary {
	cursor: pointer;

	padding: calc(var(--font-size) * 0.25);

	border: calc(var(--font-size) * 0.125) solid var(--color-four);
	color: var(--color-three);
	background-color: var(--color-four);
}

details[open] > summary {
	color: var(--color-four);
	background-color: var(--color-three);
}

ul {
	padding: 0 calc(var(--font-size) * 1);
}

li {
	padding: 0 calc(var(--font-size) * 0.25) calc(var(--font-size) * 0.25);
	list-style-type: none;

	text-align: left;
}

li > hr {
	/* height: calc(var(--font-size) * 0.067); */
	border-top: calc(var(--font-size) * 0.067) solid var(--color-four);
}

a {
	color: var(--color-two);

	text-decoration: none;

	transition: all var(--transition-short) ease-in-out;
}

a:hover {
	text-decoration: underline;

	transition: all var(--transition-short) ease-in-out;
}

svg {
	margin: 0;
}

.main-container {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;

	padding: calc(var(--font-size) * 0.75);
	margin: calc(var(--font-size) * 0.5) calc(var(--font-size) * 0.15);
	max-width: calc(var(--font-size) * 32);

	background-color: var(--color-four);
	border-radius: calc(var(--font-size) * 0.75);

	transition: all var(--transition-long) ease-in-out;
}

/*** Creates 'hole' on left of h1 *******/
/*** to maintain symmetrical layout *****/
/*** with color mode button on right ****/
.rule-text {
	padding: calc(var(--font-size) * 0.25) calc(var(--font-size) * 0.25) 0 0;

	color: var(--color-one);

	font-size: calc(var(--font-size) * 1);
}

.game-play {
	display: flex;
	justify-content: space-between;
	width: 100%;

	margin: calc(var(--font-size) * 1) 0;
	padding: calc(var(--font-size) * 1);

	background-color: var(--color-one);
	border: calc(var(--font-size) * 0.125) solid var(--color-three);
}

.game-play-text {
	display: flex;
	justify-content: space-between;
	align-items: flex-end;
	gap: calc(var(--font-size) * 0.5);
	width: 100%;

	color: var(--color-three);

	transition: all var(--transition-long) ease-in-out;
}

.game-text {
	padding: calc(var(--font-size) * 0.75) calc(var(--font-size) * 0.75)
		calc(var(--font-size) * 0.5);

	border: calc(var(--font-size) * 0.067) solid var(--color-one);
	font-size: calc(var(--font-size) * 1.15);
	line-height: 1.4;

	transition: all var(--transition-long) ease-in-out;
}

.game-text.player {
	background-color: var(--color-two);
	color: var(--color-one);
}

.game-text.computer {
	background-color: var(--color-four);
	color: var(--color-three);
}

.game-text.reset {
	background-color: var(--color-one);
	color: var(--color-three);
}

#winnerText {
	display: none;
	background-color: var(--color-four);

	transition: all var(--transition-long) ease-in-out;
}

.game-play-header-text::before {
	content: 'Score:';
	padding: calc(var(--font-size) * 0.25) 0 0 calc(var(--font-size) * 0.25);

	color: var(--color-one);
	font-size: calc(var(--font-size) * 1.1);
}

.game-play-header-text {
	display: flex;
	justify-content: space-around;
	align-items: center;
	gap: calc(var(--font-size) * 0.4);

	padding: calc(var(--font-size) * 0.25);

	background-color: var(--color-two);
	border: calc(var(--font-size) * 0.125) solid var(--color-three);
	color: var(--color-one);
	font-size: calc(var(--font-size) * 1.25);
}

.score-header-text {
	margin: auto;
	padding: calc(var(--font-size) * 0.25) 0 0 calc(var(--font-size) * 0.5);

	font-size: calc(var(--font-size) * 1.25);
	color: var(--color-one);
}

.game-score-text {
	margin: 0;
	padding: 0;

	font-size: calc(var(--font-size) * 1.25);

	transition: all var(--transition-long) ease-in-out;
}

/*** These are the flex containers holding ***/
/*** the icon and the numeric score **********/
.pScore,
.cScore {
	display: flex;
	text-align: center;
	justify-content: space-around;
	flex-wrap: nowrap;
	gap: calc(var(--font-size) * 0.25);

	padding: calc(var(--font-size) * 0.25) calc(var(--font-size) * 0.25) 0;

	background-color: var(--color-three);
	border: calc(var(--font-size) * 0.192) solid var(--color-three);

	transition: all var(--transition-long) ease-in-out;
}

#pScore.win,
#cScore.win {
	background-color: var(--color-one);
	border-color: var(--color-three);
}

#pScoreIcon.win,
#cScoreIcon.win {
	fill: var(--color-three);
}

/*** The acutal number score, updated via JavaScript ***/
#playerScore,
#computerScore {
	margin: auto;
	padding: 0;
	width: calc(var(--font-size) * 1.5);

	color: var(--color-one);
	font-size: calc(var(--font-size) * 1.5);

	transition: all var(--transition-long) ease-in-out;
}

#playerScore.win,
#computerScore.win {
	color: var(--color-three);
}

.choice-player,
.choice-computer {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;
	gap: calc(var(--font-size) * 0.5);
	padding: calc(var(--font-size) * 1) 0;
}

.player-section,
.computer-section {
	margin: calc(var(--font-size) * 1) 0;
	padding: 0 calc(var(--font-size) * 1);
	width: 100%;

	background-color: var(--color-three);
}

.computer-section {
	margin: calc(var(--font-size) * 1) 0 0;
}

/*** Desktop padding too spacious ***/
/*** at mobile resolutions **********/
@media screen and (max-width: 550px) {
	.player-section {
		margin: calc(var(--font-size) * 0.5) 0 0;
	}

	.computer-section {
		margin: calc(var(--font-size) * 0.5) 0;
	}
}

.player-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: calc(var(--font-size) * 1) 0 0;
}

.player-header-text {
	display: flex;
	justify-content: flex-start;
	align-items: center;
	gap: calc(var(--font-size) * 0.5);

	background-color: var(--color-two);
	border: calc(var(--font-size) * 0.125) solid var(--color-three);
	color: var(--color-one);
	font-size: calc(var(--font-size) * 1);
	padding: calc(var(--font-size) * 0.25) calc(var(--font-size) * 0.75);
}

/*! *** the acutal buttons used in game play ***/
#computerRock,
#computerPaper,
#computerScissors,
#playerRock,
#playerPaper,
#playerScissors {
	display: flex;
	justify-content: center;
	align-items: center;
	width: calc(var(--font-size) * 9);
	flex: 1 0 calc(var(--font-size) * 9);
	padding: calc(var(--font-size) * 0.5) 0 calc(var(--font-size) * 0.5);

	transition: all var(--transition-long) ease-in-out;
}

#computerRock,
#computerPaper,
#computerScissors {
	opacity: 0;

	background-color: var(--color-four);
	border-color: var(--color-four);
	fill: var(--color-three);
	color: var(--color-three);

	transition: all var(--transition-long) ease-in-out;
}

#computerRock.turnedOn,
#computerPaper.turnedOn,
#computerScissors.turnedOn {
	opacity: 1;

	transition: all var(--transition-long) ease-in-out;
}

#playerRock,
#playerPaper,
#playerScissors {
	background-color: var(--color-three);
	border: calc(var(--font-size) * 0.2) solid var(--color-four);
	box-shadow: var(--shadow-on);

	transition: all var(--transition-long) ease-in-out;
}

#playerPaper.active,
#playerScissors.active,
#playerRock.active {
	background-color: var(--color-two);
	border-color: var(--color-two);
	box-shadow: var(--shadow-off);
	color: var(--color-three);
}

/*** on mobile screen sizes, adjust buttons ***/
/*** to be 3 in a column & increase gap to  ***/
/*** help avoid accidental presses          ***/
@media screen and (max-width: 550px) {
	.choice-player,
	.choice-computer {
		gap: calc(var(--font-size) * 1);
		padding: calc(var(--font-size) * 1) 0;
	}
	/*? setting flex-basis to 100% was  */
	/*? only solution I could find to   */
	/*? ensure buttons in single column */
	#computerRock,
	#computerPaper,
	#computerScissors,
	#playerRock,
	#playerPaper,
	#playerScissors {
		flex-basis: 100%;
		padding: calc(var(--font-size) * 0.5) 0 calc(var(--font-size) * 0.5);
	}
}

.svg-rock-computer,
.svg-paper-computer,
.svg-scissors-computer {
	width: var(--size-icon-reg);
	height: var(--size-icon-reg);

	fill: var(--color-three);

	transform: rotate(-90deg) rotateY(180deg);
}

.svg-scissors-computer {
	transform: rotateY(180deg);
}

.svg-rock-player,
.svg-paper-player,
.svg-scissors-player {
	width: var(--size-icon-reg);
	height: var(--size-icon-reg);

	fill: var(--color-one);
}

.svg-rock-player,
.svg-paper-player {
	transform: rotate(90deg);
}

.svg-bot-icon,
.svg-user-icon {
	width: var(--size-icon-score);
	height: var(--size-icon-score);

	fill: var(--color-one);
}

/******************* Reset Button *******************/
.reset {
	align-self: center;
	padding: calc(var(--font-size) * 1) calc(var(--font-size) * 1)
		calc(var(--font-size) * 0.75);

	border: calc(var(--font-size) * 0.067) solid var(--color-three);
	background-color: var(--color-one);

	font-size: calc(var(--font-size) * 0.875);

	transition: all var(--transition-long) ease-in-out;
}

.reset:hover {
	background-color: var(--color-three);
	color: var(--color-one);

	transition: all var(--transition-long) ease-in-out;
}

/****************************************************/
/****************** Code for Modal ******************/
/****************************************************/
.modal-reset-container {
	opacity: 0;

	pointer-events: none;

	display: flex;
	justify-content: center;
	align-items: center;

	position: fixed;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;

	background-color: hsla(0, 0%, 0%, 0.6);
	-webkit-backdrop-filter: blur(calc(var(--font-size) * 0.25));
	backdrop-filter: blur(calc(var(--font-size) * 0.25));
	border-radius: 0;

	transition: all var(--transition-long) ease-in;
}

.modal-reset-container.show {
	opacity: 1;

	pointer-events: auto;

	transition: all var(--transition-long) ease-in;
}

.modal-reset {
	padding: calc(var(--font-size) * 1.5);
	max-width: calc(var(--font-size) * 25);

	background-color: var(--color-four);
	box-shadow: var(--shadow-on);
}

.modal-reset-buttons {
	display: flex;
	gap: calc(var(--font-size) * 1.25);

	margin: calc(var(--font-size) * 1.5) 0 0;
}

.modal-reset-button-no,
.modal-reset-button-yes {
	padding: calc(var(--font-size) * 0.75) calc(var(--font-size) * 1)
		calc(var(--font-size) * 0.5);
	width: calc(var(--font-size) * 10);

	background-color: var(--color-three);
	border: calc(var(--font-size) * 0.125) solid var(--color-three);
	box-shadow: var(--shadow-on);
	color: var(--color-one);

	transition: all var(--transition-long) ease-in-out;
}

.modal-reset-button-yes {
	background-color: var(--color-four);
	border: calc(var(--font-size) * 0.125) solid var(--color-three);
	color: var(--color-three);
}

.modal-reset-button-no:hover,
.modal-reset-button-yes:hover {
	background-color: var(--color-two);
	border: calc(var(--font-size) * 0.125) solid var(--color-two);
	box-shadow: var(--shadow-off);
	color: var(--color-one);

	transition: all var(--transition-long) ease-in-out;
}

/********* Modal window too big on phones, *********/
/********* so shrinking it *************************/
@media screen and (max-width: 550px) {
	.modal-reset {
		max-width: calc(var(--font-size) * 20);
	}
	.modal-reset-buttons {
		/** Set Cancel button below Confirm button ****/
		/** so people who click reset by mistake ******/
		/** can easily exit out of the process ********/
		flex-direction: column-reverse;
	}
	.modal-reset-button-no,
	.modal-reset-button-yes {
		width: 100%;
	}
}

/******************************************************/
/********** Code related to color-mode swap ***********/
/******************************************************/

.hole {
	background-color: var(--color-four);
}

.empty,
.color-mode__header {
	height: var(--size-icon-reg);
	width: var(--size-icon-reg);
}

.svg-dark-mode,
.svg-light-mode {
	fill: var(--color-three);
	transform: rotate(180deg);
}

button.dark--hidden,
button.light--hidden {
	height: var(--size-icon-reg);
	width: var(--size-icon-reg);

	background-color: var(--color-four);
}

button.dark--hidden:hover,
button.light--hidden:hover {
	background-color: var(--color-one);
	fill: var(--color-two);
}

button.dark--hidden:active,
button.light--hidden:active {
	background-color: var(--color-one);
	fill: var(--color-two);
}

@media screen and (max-width: 550px) {
	.empty,
	.color-mode__header,
	button.dark--hidden,
	button.light--hidden {
		height: calc(var(--font-size) * 3);
		width: calc(var(--font-size) * 3);
	}
}
